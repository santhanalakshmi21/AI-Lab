# -*- coding: utf-8 -*-
"""CSP.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NPwbp6LLQa1wYCvmVctYgwhzC02SIe1G
"""

graph = {
    'A': ['B', 'C'],
    'B': ['D', 'E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}

visited_bfs = []
queue = []


def bfs(visited_bfs, graph, node):
  visited_bfs.append(node)
  queue.append(node)

  while queue:
    s = queue.pop(0)
    print(s, end=" ")

    for neighbour in graph[s]:
      if neighbour not in visited_bfs:
        visited_bfs.append(neighbour)
        queue.append(neighbour)


visited = set()


def dfs(visited, graph, node):
    if node not in visited:
        print(node, end=" ")
        visited.add(node)
        for neighbour in graph[node]:
            dfs(visited, graph, neighbour)


print("BFS:", end=" ")
bfs(visited_bfs, graph, 'A')
print('\n')
print("DFS:", end=" ")
dfs(visited, graph, 'A')